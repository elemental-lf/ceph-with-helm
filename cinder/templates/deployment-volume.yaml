{{/*
Copyright 2017 The Openstack-Helm Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.deployment_volume }}
{{- $envAll := . }}

{{- $mounts_cinder_volume := .Values.pod.mounts.cinder_volume.cinder_volume }}
{{- $mounts_cinder_volume_init := .Values.pod.mounts.cinder_volume.init_container }}

{{- $serviceAccountName := "cinder-volume" }}
{{ tuple $envAll "volume" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cinder-volume
  labels:
{{ tuple $envAll "cinder" "volume" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  replicas: {{ .Values.pod.replicas.volume }}
  selector:
    matchLabels:
{{ tuple $envAll "cinder" "volume" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
{{ tuple $envAll | include "helm-toolkit.snippets.kubernetes_upgrades_deployment" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "cinder" "volume" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      affinity:
{{ tuple $envAll "cinder" "volume" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.labels.volume.node_selector_key }}: {{ .Values.labels.volume.node_selector_value }}
      initContainers:
{{ tuple $envAll "volume" $mounts_cinder_volume_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        {{- if include "cinder.utils.is_ceph_volume_configured" $envAll }}
        - name: ceph-keyring-placement
{{ tuple $envAll "cinder_volume" | include "helm-toolkit.snippets.image" | indent 10 }}
          securityContext:
            runAsUser: 0
          command:
            - /tmp/ceph-keyring.sh
          env:
            - name: RBD_USER
              value: {{ index (index .Values.conf.backends (include "cinder.utils.ceph_volume_section_name" $envAll)) "rbd_user" | quote }}
          volumeMounts:
            - name: etcceph
              mountPath: /etc/ceph
            - name: cinder-bin
              mountPath: /tmp/ceph-keyring.sh
              subPath: ceph-keyring.sh
              readOnly: true
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
        {{ end }}
        {{- if eq ( split "://" .Values.conf.cinder.coordination.backend_url )._0 "file" }}
        - name: ceph-coordination-volume-perms
{{ tuple $envAll "cinder_volume" | include "helm-toolkit.snippets.image" | indent 10 }}
          securityContext:
            runAsUser: 0
          command:
            - chown
            - -R
            - "cinder:"
            - {{ ( split "://" .Values.conf.cinder.coordination.backend_url )._1 }}
          volumeMounts:
            - name: cinder-coordination
              mountPath: {{ ( split "://" .Values.conf.cinder.coordination.backend_url )._1 }}
        {{ end }}
      containers:
        - name: cinder-volume
{{ tuple $envAll "cinder_volume" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.volume | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          securityContext:
            runAsUser: {{ .Values.pod.user.cinder.uid }}
          command:
            - /tmp/cinder-volume.sh
          volumeMounts:
            - name: cinder-bin
              mountPath: /tmp/cinder-volume.sh
              subPath: cinder-volume.sh
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/cinder.conf
              subPath: cinder.conf
              readOnly: true
            - name: cinder-etc
              mountPath: {{ .Values.conf.cinder.DEFAULT.log_config_append }}
              subPath: {{ base .Values.conf.cinder.DEFAULT.log_config_append }}
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/conf/backends.conf
              subPath: backends.conf
              readOnly: true
            {{- if include "cinder.utils.is_ceph_volume_configured" $envAll }}
            - name: etcceph
              mountPath: /etc/ceph
            - name: ceph-etc
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
              readOnly: true
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
            {{- end }}
            {{- if eq ( split "://" .Values.conf.cinder.coordination.backend_url )._0 "file" }}
            - name: cinder-coordination
              mountPath: {{ ( split "://" .Values.conf.cinder.coordination.backend_url )._1 }}
            {{- end }}
            - name: cinder-etc
              # NOTE (Portdirect): We mount here to override Kollas
              # custom sudoers file when using Kolla images, this
              # location will also work fine for other images.
              mountPath: /etc/sudoers.d/kolla_cinder_sudoers
              subPath: cinder_sudoers
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/sudoers.d/kolla_cinder_volume_sudoers
              subPath: cinder_sudoers
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/rootwrap.conf
              subPath: rootwrap.conf
              readOnly: true
            {{- range $key, $value := $envAll.Values.conf.rootwrap_filters }}
            {{- if ( has "volume" $value.pods ) }}
            {{- $filePrefix := replace "_" "-"  $key }}
            {{- $rootwrapFile := printf "/etc/cinder/rootwrap.d/%s.filters" $filePrefix }}
            - name: cinder-etc
              mountPath: {{ $rootwrapFile }}
              subPath: {{ base $rootwrapFile }}
              readOnly: true
            {{- end }}
            {{- end }}
{{ if $mounts_cinder_volume.volumeMounts }}{{ toYaml $mounts_cinder_volume.volumeMounts | indent 12 }}{{ end }}
      volumes:
        - name: cinder-bin
          configMap:
            name: cinder-bin
            defaultMode: 0555
        - name: cinder-etc
          secret:
            secretName: cinder-etc
            defaultMode: 0444
        {{- if include "cinder.utils.is_ceph_volume_configured" $envAll }}
        - name: etcceph
          emptyDir: {}
        - name: ceph-etc
          configMap:
            name: ceph-etc
            defaultMode: 0444
        - name: ceph-keyring
          secret:
            secretName: {{ .Values.secrets.rbd.volume | quote }}
        {{ end }}
        {{- if eq ( split "://" .Values.conf.cinder.coordination.backend_url )._0 "file" }}
        #NOTE (portdirect): this will need to be set to a shared mount amongst all cinder
        # pods for the coordination backend to be fully functional.
        - name: cinder-coordination
          emptyDir: {}
        {{- end }}
{{ if $mounts_cinder_volume.volumes }}{{ toYaml $mounts_cinder_volume.volumes | indent 8 }}{{ end }}
{{- end }}
