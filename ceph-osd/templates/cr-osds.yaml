{{- if .Values.manifests.cr_osds }}
{{- $envAll := . }}
{{- $serviceAccountName := "ceph-osd"}}
{{ tuple . "osd" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: {{ $serviceAccountName }}
value: 1000000000
---
apiVersion: ceph.elemental.net/v1alpha1
kind: CephOSD
metadata:
  name: ceph-osds
spec:
{{- if .Values.conf.storage.osd }}
  storage:
{{ toYaml .Values.conf.storage.osd | indent 2 }}
{{- else }}
  storage: []
{{- end }}
  updateDomain: Host
  podTemplate:
    kind: Pod
    apiVersion: apps/v1
    metadata:
      name: ceph-osd
      labels:
{{ tuple $envAll "ceph" "osd" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
    spec:
{{ dict "envAll" $envAll "application" "osd" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      serviceAccountName: {{ $serviceAccountName }}
      nodeSelector:
        {{ .Values.labels.osd.node_selector_key }}: {{ .Values.labels.osd.node_selector_value | quote }}
      hostNetwork: true
      hostPID: true
      dnsPolicy: {{ .Values.pod.dns_policy }}
      priorityClassName: {{ $serviceAccountName }}
      initContainers:
{{ tuple $envAll "osd" list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        - name: init-dirs
{{ tuple $envAll "ceph_osd" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ dict "envAll" $envAll "application" "osd" "container" "init_dirs" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - /tmp/init-dirs.sh
          env:
          # NOTE(portdirect): These environment variables will be populated
          # dynamicly at the point of render.
          # - name: OSD_DEVICE
          #   value: /dev/sdb
          # - name: OSD_FORCE_ZAP
          #   value: false
          # - name: OSD_DB_DEVICE:
          #   value: empty string
            - name: CLUSTER
              value: "ceph"
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: pod-run
              mountPath: /run
            - name: pod-etc-ceph
              mountPath: /etc/ceph
            - name: ceph-osd-bin
              mountPath: /tmp/init-dirs.sh
              subPath: init-dirs.sh
              readOnly: true
            - name: pod-var-lib-ceph
              mountPath: /var/lib/ceph
              readOnly: false
        - name: init
{{ tuple $envAll "ceph_osd" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.osd | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "osd" "container" "init" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
          # NOTE(portdirect): These environment variables will be populated
          # dynamicly at the point of render and added to all containers in the
          # pod
          # - name: OSD_DEVICE
          #   value: /dev/sdb
          # - name: OSD_FORCE_ZAP
          #   value: false
          # - name: OSD_DB_DEVICE:
          #   value: empty string
            - name: CLUSTER
              value: "ceph"
          command:
            - /tmp/osd-init.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: pod-run
              mountPath: /run
            - name: pod-etc-ceph
              mountPath: /etc/ceph
            - name: ceph-osd-bin
              mountPath: /tmp/osd-init.sh
              subPath: osd-init.sh
              readOnly: true
            - name: ceph-etc
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
              readOnly: true
            - name: ceph-bootstrap-osd-keyring
              mountPath: /var/lib/ceph/bootstrap-osd/ceph.keyring
              subPath: ceph.keyring
              readOnly: false
            - name: devices
              mountPath: /dev
              readOnly: false
            - name: pod-var-lib-ceph
              mountPath: /var/lib/ceph
              readOnly: false
            - name: run-udev
              mountPath: /run/udev
              readOnly: true
            - name: run-udev-control
              mountPath: /run/udev/control
              readOnly: true
            - name: varlog
              mountPath: /var/log/ceph
            - name: ceph-osd-bin
              mountPath: /etc/lvm/lvmlocal.conf
              subPath: lvmlocal.conf
              readOnly: true
            - name: ceph-osd-bin
              mountPath: /usr/local/sbin/smartctl
              subPath: smartctl
              readOnly: true
            - name: ceph-osd-bin
              mountPath: /etc/sudoers.d/ceph-osd-smartctl
              subPath: sudoers.d-ceph-osd-smartctl
      containers:
        - name: osd
{{ tuple $envAll "ceph_osd" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.osd | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "osd" "container" "osd" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
          # - name: OSD_DEVICE
          #   value: /dev/sdb
          # - name: OSD_DB_DEVICE
          #   value: empty string
          # - name: OSD_WAL_DEVICE
          #   value: empty string
            - name: CLUSTER
              value: "ceph"
          command:
            - /tmp/osd-start.sh
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/osd-stop.sh
          terminationGracePeriodSeconds: 300
          livenessProbe:
           exec:
            command:
             - /tmp/osd-check.sh
             - liveness
           initialDelaySeconds: 120
           periodSeconds: 60
          readinessProbe:
           exec:
            command:
             - /tmp/osd-check.sh
             - readiness
           initialDelaySeconds: 60
           periodSeconds: 60
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: pod-run
              mountPath: /run
            - name: pod-etc-ceph
              mountPath: /etc/ceph
            - name: ceph-osd-bin
              mountPath: /tmp/osd-start.sh
              subPath: osd-start.sh
              readOnly: true
            - name: ceph-osd-bin
              mountPath: /tmp/osd-check.sh
              subPath: osd-check.sh
              readOnly: true
            - name: ceph-osd-bin
              mountPath: /tmp/osd-stop.sh
              subPath: osd-stop.sh
              readOnly: true
            - name: ceph-etc
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
              readOnly: true
            - name: ceph-bootstrap-osd-keyring
              mountPath: /var/lib/ceph/bootstrap-osd/ceph.keyring
              subPath: ceph.keyring
              readOnly: false
            - name: devices
              mountPath: /dev
              readOnly: false
            - name: pod-var-lib-ceph
              mountPath: /var/lib/ceph
              readOnly: false
            - name: run-udev
              mountPath: /run/udev
              readOnly: true
            - name: run-udev-control
              mountPath: /run/udev/control
              readOnly: true
            - name: varlog
              mountPath: /var/log/ceph
            - name: ceph-osd-bin
              mountPath: /etc/lvm/lvmlocal.conf
              subPath: lvmlocal.conf
              readOnly: true
            - name: ceph-osd-bin
              mountPath: /usr/local/sbin/smartctl
              subPath: smartctl
              readOnly: true
            - name: ceph-osd-bin
              mountPath: /etc/sudoers.d/ceph-osd-smartctl
              subPath: sudoers.d-ceph-osd-smartctl
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: pod-run
          emptyDir:
           medium: "Memory"
        - name: pod-etc-ceph
          emptyDir: {}
        - name: devices
          hostPath:
            path: {{ .Values.conf.storage.dev_path }}
        - name: run-udev
          hostPath:
            path: /run/udev
        - name: run-udev-control
          hostPath:
            path: /dev/null
        - name: pod-var-lib-ceph
          emptyDir: {}
        - name: varlog
          emptyDir: {}
        - name: ceph-osd-bin
          configMap:
            name: ceph-osd-bin
            defaultMode: 0555
        - name: ceph-etc
          configMap:
            name: ceph-etc
            defaultMode: 0444
        - name: ceph-bootstrap-osd-keyring
          secret:
            secretName: {{ .Values.secrets.keyrings.osd }}
      tolerations:
        - key: node.kubernetes.io/unschedulable
          operator: Exists
          effect: NoSchedule
        - key: node.kubernetes.io/not-ready
          operator: Exists
        - key: node.kubernetes.io/unreachable
          operator: Exists
{{- end }}
